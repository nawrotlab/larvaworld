[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core>=1.0.0" ]

[tool.poetry]
name = "larvaworld"
version = "0.0.0"
description = "A virtual lab for Drosophila larva behavioral modeling and analysis"
authors = ['Panagiotis Sakagiannis <bagjohn0@gmail.com>']
license = "GNU General Public License v3"
readme = "README.md"
repository = "https://github.com/nawrotlab/larvaworld"
documentation = "https://larvaworld.readthedocs.io"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries",
]
packages = [
  { include = "larvaworld", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/nawrotlab/larvaworld/issues"
"Changelog" = "https://github.com/nawrotlab/larvaworld/blob/main/CHANGELOG.md"

[tool.poetry.scripts]
larvaworld = "larvaworld.cli.main:main"
larvaworld-gui = "larvaworld.gui.main:main"
# larvaworld-mod = "larvaworld.dashboards.module_tester:main"

[tool.setuptools.package-data]
"*" = ["*.sh", "*.png", "*.pdf", "*.txt", "*.csv"]

[tool.poetry.dependencies]
python = "^3.8"
rich = ">=10"
typer = { extras = [ "all" ], version = "^0.9.0" }

agentpy = "0.1.*"
argparse = "1.4.*"
geopandas = "0.13.*"
holoviews = "1.17.*"
hvplot = "0.10.*"
imageio = "2.35.*"
importlib = "1.0.*"
matplotlib = "3.7.*"
movingpandas = "0.19.*"
numpy = "1.24.*"
panel = "1.2.*"
pandas = "2.0.*"
param = "2.1.*"
pint = "0.21.*"
pint_pandas = "0.3"
powerlaw = "1.5"
progressbar = "2.5"
pygame = "2.6.*"
pypdf = "5.0.*"
PySimpleGUI = "4.70.*"
seaborn = "0.13.*"
scikit-learn = "1.3.*"
scipy = "1.9.*"
shapely = "2.0.*"
statannot = "0.2.*"
tables = "3.8.*"
typing-extensions = "4.12.*"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
cli-test-helpers = "^4.0.0"

[tool.poetry.group.nengo]
optional = false

[tool.poetry.group.nengo.dependencies]
nengo = "4.0"

[tool.poetry.group.box2d]
optional = false

[tool.poetry.group.box2d.dependencies]
box2d-py = "2.3.8"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = { version = ">=0.16", python = ">=3.11" }
sphinx = { version = ">=4.0", python = ">=3.11" }
furo = { version = ">=2023.5.20", python = ">=3.11" }
sphinx-autobuild = { version = ">=2024.0.0", python = ">=3.11" }
sphinx-rtd-theme = "*"
sphinx-autoapi = "*"
# myst-nb = "*"

[tool.ruff]
target-version = "py38"
line-length = 88
lint.select = [
  "B",   # flake8-bugbear
  "D",   # flake8-docstrings
  "C4",  # flake8-comprehensions
  "S",   # flake8-bandit
  "F",   # pyflake
  "E",   # pycodestyle
  "W",   # pycodestyle
  "UP",  # pyupgrade
  "I",   # isort
  "RUF", # ruff specific
]
lint.ignore = [
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D401", # First line of docstring should be in imperative mood
]
lint.per-file-ignores."conftest.py" = [ "D100" ]
lint.per-file-ignores."docs/conf.py" = [ "D100" ]
lint.per-file-ignores."setup.py" = [ "D100" ]
lint.per-file-ignores."tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]
lint.isort.known-first-party = [ "larvaworld", "tests" ]

[tool.pytest.ini_options]
# addopts = """\
#     -v
#     -Wdefault
#     --cov=larvaworld
#     --cov-report=term
#     --cov-report=xml
#     """
addopts = """\
    -v
    -Wdefault
    --cov=larvaworld
    --cov-report=xml
    """
pythonpath = [ "src" ]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
  'if __name__ == "__main__":',
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
  'docs/.*',
  'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[tool.semantic_release]
version_toml = [ "pyproject.toml:tool.poetry.version" ]
version_variables = [
  "src/larvaworld/__init__.py:__version__",
  "docs/conf.py:release",
]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore.*",
  "ci.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true
